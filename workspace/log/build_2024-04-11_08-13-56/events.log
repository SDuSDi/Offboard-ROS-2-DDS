[0.000000] (-) TimerEvent: {}
[0.000180] (drone) JobQueued: {'identifier': 'drone', 'dependencies': OrderedDict()}
[0.000446] (drone) JobStarted: {'identifier': 'drone'}
[0.010025] (drone) JobProgress: {'identifier': 'drone', 'progress': 'cmake'}
[0.010241] (drone) Command: {'cmd': ['/usr/bin/cmake', '/root/workspace/src/drone', '-DCMAKE_INSTALL_PREFIX=/root/workspace/install/drone'], 'cwd': '/root/workspace/build/drone', 'env': OrderedDict([('TMUX', '/tmp/tmux-0/default,48,0'), ('HOSTNAME', 'GTX-3060-2'), ('SHLVL', '3'), ('LD_LIBRARY_PATH', '/root/microros_ws/install/px4_ros_com/lib:/root/microros_ws/install/px4_msgs/lib:/root/microros_ws/install/micro_ros_agent/lib:/root/microros_ws/install/micro_ros_msgs/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/root'), ('OLDPWD', '/root/workspace/src'), ('ROS_PYTHON_VERSION', '3'), ('COLCON_PREFIX_PATH', '/root/microros_ws/install'), ('ROS_DISTRO', 'foxy'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('TERM', 'screen'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/gcc-arm-none-eabi-9-2020-q2-update/bin:/opt/ros/foxy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'), ('DISPLAY', ':1'), ('LANG', 'C.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('AMENT_PREFIX_PATH', '/root/microros_ws/install/px4_ros_com:/root/microros_ws/install/px4_msgs:/root/microros_ws/install/micro_ros_setup:/root/microros_ws/install/micro_ros_agent:/root/microros_ws/install/micro_ros_msgs:/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('PWD', '/root/workspace/build/drone'), ('LC_ALL', 'C.UTF-8'), ('PYTHONPATH', '/root/microros_ws/install/px4_ros_com/lib/python3.8/site-packages:/root/microros_ws/install/px4_msgs/lib/python3.8/site-packages:/root/microros_ws/install/micro_ros_msgs/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('TMUX_PANE', '%3'), ('CMAKE_PREFIX_PATH', '/root/microros_ws/install/px4_ros_com:/root/microros_ws/install/px4_msgs:/root/microros_ws/install/micro_ros_setup:/root/microros_ws/install/micro_ros_agent:/root/microros_ws/install/micro_ros_msgs:/opt/ros/foxy')]), 'shell': False}
[0.047820] (drone) StdoutLine: {'line': b'-- The C compiler identification is GNU 9.4.0\n'}
[0.081213] (drone) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 9.4.0\n'}
[0.084468] (drone) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[0.099893] (-) TimerEvent: {}
[0.128779] (drone) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[0.129482] (drone) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.174137] (drone) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.186593] (drone) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.187301] (drone) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.189384] (drone) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[0.199995] (-) TimerEvent: {}
[0.249465] (drone) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[0.250055] (drone) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.300091] (-) TimerEvent: {}
[0.308094] (drone) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.315549] (drone) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.315794] (drone) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.317161] (drone) StdoutLine: {'line': b'-- Found ament_cmake: 0.9.12 (/opt/ros/foxy/share/ament_cmake/cmake)\n'}
[0.332775] (drone) StdoutLine: {'line': b'-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") \n'}
[0.333062] (drone) StdoutLine: {'line': b'-- Using PYTHON_EXECUTABLE: /usr/bin/python3\n'}
[0.400172] (-) TimerEvent: {}
[0.428779] (drone) StdoutLine: {'line': b'-- Found rclcpp: 2.4.3 (/opt/ros/foxy/share/rclcpp/cmake)\n'}
[0.457034] (drone) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.460960] (drone) StdoutLine: {'line': b'-- Found rosidl_adapter: 1.3.1 (/opt/ros/foxy/share/rosidl_adapter/cmake)\n'}
[0.500269] (-) TimerEvent: {}
[0.511724] (drone) StdoutLine: {'line': b'-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "1.1.1f")  \n'}
[0.531432] (drone) StdoutLine: {'line': b'-- Found FastRTPS: /opt/ros/foxy/include  \n'}
[0.587733] (drone) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[0.600363] (-) TimerEvent: {}
[0.623578] (drone) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 1.0.4 (/opt/ros/foxy/share/rmw_implementation_cmake/cmake)\n'}
[0.624445] (drone) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[0.624955] (drone) StdoutLine: {'line': b'-- Looking for pthread.h\n'}
[0.671938] (drone) StdoutLine: {'line': b'-- Looking for pthread.h - found\n'}
[0.672166] (drone) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[0.700512] (-) TimerEvent: {}
[0.717535] (drone) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\n'}
[0.717677] (drone) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads\n'}
[0.759629] (drone) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads - not found\n'}
[0.759788] (drone) StdoutLine: {'line': b'-- Looking for pthread_create in pthread\n'}
[0.800595] (-) TimerEvent: {}
[0.810078] (drone) StdoutLine: {'line': b'-- Looking for pthread_create in pthread - found\n'}
[0.810725] (drone) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[0.900736] (-) TimerEvent: {}
[0.911562] (drone) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.9.8 (/opt/ros/foxy/share/ament_lint_auto/cmake)\n'}
[0.961434] (drone) StdoutLine: {'line': b"-- Added test 'copyright' to check source files copyright and LICENSE\n"}
[0.962154] (drone) StdoutLine: {'line': b"-- Added test 'cppcheck' to perform static code analysis on C / C++ code\n"}
[0.962255] (drone) StdoutLine: {'line': b'-- Configured cppcheck include dirs: \n'}
[0.962284] (drone) StdoutLine: {'line': b'-- Configured cppcheck exclude dirs and/or files: \n'}
[0.962771] (drone) StdoutLine: {'line': b"-- Added test 'cpplint' to check C / C++ code against the Google style\n"}
[0.963000] (drone) StdoutLine: {'line': b'-- Configured cpplint exclude dirs and/or files: \n'}
[0.963354] (drone) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[0.964027] (drone) StdoutLine: {'line': b"-- Added test 'uncrustify' to check C / C++ code style\n"}
[0.964113] (drone) StdoutLine: {'line': b'-- Configured uncrustify additional arguments: \n'}
[0.964312] (drone) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[0.965998] (drone) StdoutLine: {'line': b'-- Configuring done\n'}
[0.966478] (drone) StderrLine: {'line': b'CMake Error at CMakeLists.txt:23 (add_executable):\n'}
[0.966532] (drone) StderrLine: {'line': b'  Cannot find source file:\n'}
[0.966558] (drone) StderrLine: {'line': b'\n'}
[0.966583] (drone) StderrLine: {'line': b'    src/offb_node.cpp\n'}
[0.966606] (drone) StderrLine: {'line': b'\n'}
[0.966634] (drone) StderrLine: {'line': b'  Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm\n'}
[0.966661] (drone) StderrLine: {'line': b'  .hpp .hxx .in .txx\n'}
[0.966683] (drone) StderrLine: {'line': b'\n'}
[0.966707] (drone) StderrLine: {'line': b'\n'}
[0.966937] (drone) StderrLine: {'line': b'CMake Error at CMakeLists.txt:23 (add_executable):\n'}
[0.966971] (drone) StderrLine: {'line': b'  No SOURCES given to target: node\n'}
[0.966995] (drone) StderrLine: {'line': b'\n'}
[0.967018] (drone) StderrLine: {'line': b'\n'}
[0.967041] (drone) StderrLine: {'line': b'CMake Generate step failed.  Build files cannot be regenerated correctly.\n'}
[0.970857] (drone) CommandEnded: {'returncode': 1}
[0.988988] (drone) JobEnded: {'identifier': 'drone', 'rc': 1}
[0.999536] (-) EventReactorShutdown: {}
